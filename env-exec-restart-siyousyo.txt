env-exec再起動ランチャー 仕様やらメモ

env-exec-restart --default // デフォルトの%USERPROFILE% または $env:USERPROFILE内のenv-exec-config.tomlを探す
実行時にenv-execが複数起動している場合は、該当プロセス、PIDを表示させ、選択可能にする。
また、前提としてenv-execにより下記の情報を格納した一時ファイルが生成される。
==========
・親プロセスのPID(env-exec自体のPID)
・外部プログラムのPID
・外部プログラムの名前
・外部プログラムに渡された引数
・使用中の環境設定ファイルのパス
==========

env-exec-restart [env-file:DEFAULT="%USERPROFILE%/env-exec-config.toml"] [bin-name]


まず、引数で渡された外部プログラム名から、env-exec_(指定された外部プログラム名)などに部分一致する一時ファイルを探す
										↓
その際、env-exec+指定された外部プログラムが複数起動されている場合、見つかった一時ファイル名やその他それぞれ下記のフォーマットで表示
										↓
								(重複プロセス検索最大数は50)										↓
										↓
===========================================================================

|使用中の環境設定ファイルのパス(1)|
---------------------------------
----------------------------
env-exec | pid | ○○
----------------------------
----------------------------
外部プログラム名 | pid | ○○
----------------------------
----------------------------------

|使用中の環境設定ファイルのパス(2)|
---------------------------------
----------------------------
env-exec | pid | ○○
----------------------------
----------------------------
外部プログラム名 | pid | ○○
----------------------------
----------------------------------

===========================================================================
										↓
ここまでの処理で該当プロセスを発見・もしくはユーザーが選択した場合、該当プロセスを外部プログラムから順にkillする
										↓
						外部プログラム -> env-exec -> 順番にkill
										↓
env-execを起動させる。もし、env-execがPATHに存在しない場合は、env-execが実行中の絶対パスを取得したうえで、
env-execにenv-exec-restartに渡された環境設定ファイル、外部プログラム名を渡し、実行。



== 具体的なenv-exec-restartの処理の流れのメモ == 
1.	env-exec + cmd.exe -> 作業
2.	env-exec + cmd.exe のカスタムcmd.exe -> env-exec-restart実行
3.	env-execのプロセスをkill
4. 	env-exec-restart,カスタムcmd.exeは残る。(カスタムcmd.exeは新しいコンソールウィンドウで開かれているため)
5.	env-execに指定の環境設定ファイルや引数で実行(再起動)
6.	env-exec-restartで指定したenv-execにより作成された一時ファイルを削除(env-execは子プロセス->親プロセスで終了されないと一時ファイルは削除されないため
)
7.	カスタムcmd.exeのプロセスをkill
この場合仮にenv-exec-restartがカスタムcmd.exe(env-execにて起動)されていたとしても、
再起動後にkillされるはず。。そうなれば多分動作する。

2025/04/15現在、env-exec-restartは、前述の流れの7までは作成済み。おそらく大抵の流れは同じ。

しかし、再起動後のenv-execで、再起動前の環境変数が残ったまま引き継がれるのは仕様ではないため、
再起動する際は、該当環境変数やPATH内の該当の箇所をクリアする処理をかくこと。

2025/04/17現在、諸々は解決できたが、
複数のenv-exec+重複する外部プログラム等の選択肢表示ができていない他、
env-exec同様windows依存のコードになるため、Unixは非対応となっていること。
ただこれらはcfgマクロ等でOS分岐をさせて別居処理を書くことで対応できるが、
今のところ必要性はない。

2025/04/18現在,env-exec含むenv-exec系すべてのツールをclapで実装し、
バイナリ名も(env-exec -> eec, env-exec-restart -> eec-restart , env-exec-tag -> eec-tag)にした。
それに伴う変更も問題なく終了したが、問題点が何点かある。
・システム環境変数にあるenv-exec-restartのパスを削除してしまうこと。(これはenv-exec-restartの処理で、target/releaseは避ければ対応可)
・env-exec-restart(eec-restart)を使用時、env-exec(eec)が見つからない場合,一時ファイルが残ってしまうこと。
・env-exec(eec)を使用時、tomlファイル構文エラーなど、
その他外部プログラムが実行できない等のエラーの際に、一時ファイルが残ったまま終了してしまうこと。

2025/4/19現在,env-exec-restartの前述の問題点は解決した。また、env-exec(eec)自体の問題点も前述のものは解決した。
その他実装していない点、及び問題点は下記である。
・env-exec+外部プログラムの外部プログラムが重複している場合に、選択肢を出して選択可能にすること。
・env-exec-restart(eec-restart),env-exec-tag(eec-restart)を完全に作成すること。また、
これらをenv-exec(eec)にサブコマンドとして統合すること等。



== 適当な追加機能のメモ ==
普通は、
env-exec [環境設定ファイル][外部プログラム][外部プログラムに渡す引数 ...]
だけど、タグ機能つけて、前述で渡してるやつ全部タグに対応させたらとか。
env-exec-tag add test-py0000 C:/Users/osakana/test-config.toml cmd.exe
で、
env-exec使うときは前述の引数やらが、
env-exec --tag test-cpp0000で適用されて実行
みたいに。で、タグ情報は%USERPROFILE%/.env-exec/tag-data.datに格納されるとか。
あと、env-exec --tag test-cpp0000 --arg1 program.exeみたいに、タグに紐づけられた環境設定ファイルだけ適用させて、
実行可能ファイルだけ別に指定できるようにするとか。

この場合、env-exec,env-exec-restart,env-exec-tagといった単独のバイナリを独立させて作成することになる。
しばらくして問題ない場合に、env-execにすべて統合させるのが望ましい。

また、もし--tagや--arg0(環境設定ファイルパス),--arg1(外部プログラムパス、名前),--arg2(外部プログラムに渡す引数)等をやる場合は、
--arg0~2はそれぞれOption型にして、--tagが使われている場合のみ、個別で引数指定が可能にする必要がある。

ただこれを作ると本格的に環境設定ツール、uruや.pyenvに近いものになるが。
